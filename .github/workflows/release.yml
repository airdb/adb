name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v*"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      - name: Use Golang
        uses: actions/setup-go@v1
        with:
          go-version: "1.13.x"
      - name: Test
        run: echo go test -v .

      - name: Build
        run: |
          timeNow=$(date +%s)
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o adb-windows-x64.exe -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o adb-linux-x64 -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o adb-darwin-x64 -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          zip adb-windows-x64.zip adb-windows-x64.exe
          zip adb-linux-x64.zip adb-linux-x64
          zip adb-darwin-x64.zip adb-darwin-x64

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
        run: |
          timeNow=$(date +%s)
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o adb-windows-x64.exe -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o adb-linux-x64 -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o adb-darwin-x64 -ldflags "-X github.com/airdb/adb/cmd.BuildTime=$timeNow" main.go
          zip adb-windows-x64.zip adb-windows-x64.exe
          zip adb-linux-x64.zip adb-linux-x64
          zip adb-darwin-x64.zip adb-darwin-x64

      - name: Upload Release normal linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./adb-linux-x64.zip
          asset_name: adb-${{ steps.create_release.outputs.tag }}-linux-x64.zip
          asset_content_type: application/zip

      - name: Upload Release normal darwin
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./adb-darwin-x64.zip
          asset_name: adb-${{ steps.create_release.outputs.tag }}-darwin-x64.zip
          asset_content_type: application/zip

      - name: Upload Release normal windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./adb-windows-x64.zip
          asset_name: adb-${{ steps.create_release.outputs.tag }}-windows-x64.zip
          asset_content_type: application/zip
